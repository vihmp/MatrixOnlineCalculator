!function(){"use strict";var t,e,a={275:function(t,e,a){var C=this&&this.__read||function(t,e){var a="function"==typeof Symbol&&t[Symbol.iterator];if(!a)return t;var o,r,n=a.call(t),i=[];try{for(;(void 0===e||0<e--)&&!(o=n.next()).done;)i.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(a=n.return)&&a.call(n)}finally{if(r)throw r.error}}return i},k=this&&this.__values||function(t){var e="function"==typeof Symbol&&Symbol.iterator,a=e&&t[e],o=0;if(a)return a.call(t);if(t&&"number"==typeof t.length)return{next:function(){return{value:(t=t&&o>=t.length?void 0:t)&&t[o++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0}),e.AutoloadConfiguration=void 0;var o=a(251),r=a(871),w=a(924),P=a(96),h=a(629),n=a(74);function S(t,e,a,o){var r,n,i,l;if(h.Package.packages.has(t.options.require.prefix+a)){var u=t.options.autoload[a],p=C(2===u.length&&Array.isArray(u[0])?u:[u,[]],2),u=p[0],p=p[1];try{for(var c=k(u),s=c.next();!s.done;s=c.next()){var x=s.value;q.remove(x)}}catch(t){r={error:t}}finally{try{s&&!s.done&&(n=c.return)&&n.call(c)}finally{if(r)throw r.error}}try{for(var f=k(p),d=f.next();!d.done;d=f.next()){var M=d.value;R.remove(M)}}catch(t){i={error:t}}finally{try{d&&!d.done&&(l=f.return)&&l.call(f)}finally{if(i)throw i.error}}t.string=(o?e+" ":"\\begin{"+e.slice(1)+"}")+t.string.slice(t.i),t.i=0}P.RequireLoad(t,a)}var q=new r.CommandMap("autoload-macros",{},{}),R=new r.CommandMap("autoload-environments",{},{});e.AutoloadConfiguration=o.Configuration.create("autoload",{handler:{macro:["autoload-macros"],environment:["autoload-environments"]},options:{autoload:n.expandable({action:["toggle","mathtip","texttip"],amscd:[[],["CD"]],bbox:["bbox"],boldsymbol:["boldsymbol"],braket:["bra","ket","braket","set","Bra","Ket","Braket","Set","ketbra","Ketbra"],bussproofs:[[],["prooftree"]],cancel:["cancel","bcancel","xcancel","cancelto"],color:["color","definecolor","textcolor","colorbox","fcolorbox"],enclose:["enclose"],extpfeil:["xtwoheadrightarrow","xtwoheadleftarrow","xmapsto","xlongequal","xtofrom","Newextarrow"],html:["href","class","style","cssId"],mhchem:["ce","pu"],newcommand:["newcommand","renewcommand","newenvironment","renewenvironment","def","let"],unicode:["unicode"],verb:["verb"]})},config:function(t,e){var a,o,r,n,i,l,u=e.parseOptions,p=u.handlers.get("macro"),c=u.handlers.get("environment"),s=u.options.autoload;u.packageData.set("autoload",{Autoload:S});try{for(var x=k(Object.keys(s)),f=x.next();!f.done;f=x.next()){var d=f.value,M=s[d],h=C(2===M.length&&Array.isArray(M[0])?M:[M,[]],2),m=h[0],y=h[1];try{for(var b=(r=void 0,k(m)),_=b.next();!_.done;_=b.next()){var g=_.value;p.lookup(g)&&"color"!==g||q.add(g,new w.Macro(g,S,[d,!0]))}}catch(t){r={error:t}}finally{try{_&&!_.done&&(n=b.return)&&n.call(b)}finally{if(r)throw r.error}}try{for(var v=(i=void 0,k(y)),O=v.next();!O.done;O=v.next()){var J=O.value;c.lookup(J)||R.add(J,new w.Macro(J,S,[d,!1]))}}catch(t){i={error:t}}finally{try{O&&!O.done&&(l=v.return)&&l.call(v)}finally{if(i)throw i.error}}}}catch(t){a={error:t}}finally{try{f&&!f.done&&(o=x.return)&&o.call(x)}finally{if(a)throw a.error}}u.packageData.get("require")||P.RequireConfiguration.config(t,e)},init:function(t){t.options.require||n.defaultOptions(t.options,P.RequireConfiguration.options)},priority:10})},955:function(t,e){MathJax._.components.global.isObject,MathJax._.components.global.combineConfig,MathJax._.components.global.combineDefaults,e.r8=MathJax._.components.global.combineWithMathJax,MathJax._.components.global.MathJax},74:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.isObject=MathJax._.util.Options.isObject,e.APPEND=MathJax._.util.Options.APPEND,e.REMOVE=MathJax._.util.Options.REMOVE,e.OPTIONS=MathJax._.util.Options.OPTIONS,e.Expandable=MathJax._.util.Options.Expandable,e.expandable=MathJax._.util.Options.expandable,e.makeArray=MathJax._.util.Options.makeArray,e.keys=MathJax._.util.Options.keys,e.copy=MathJax._.util.Options.copy,e.insert=MathJax._.util.Options.insert,e.defaultOptions=MathJax._.util.Options.defaultOptions,e.userOptions=MathJax._.util.Options.userOptions,e.selectOptions=MathJax._.util.Options.selectOptions,e.selectOptionsFromKeys=MathJax._.util.Options.selectOptionsFromKeys,e.separateOptions=MathJax._.util.Options.separateOptions,e.lookup=MathJax._.util.Options.lookup},251:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.Configuration=MathJax._.input.tex.Configuration.Configuration,e.ConfigurationHandler=MathJax._.input.tex.Configuration.ConfigurationHandler,e.ParserConfiguration=MathJax._.input.tex.Configuration.ParserConfiguration},924:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.Symbol=MathJax._.input.tex.Symbol.Symbol,e.Macro=MathJax._.input.tex.Symbol.Macro},871:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.AbstractSymbolMap=MathJax._.input.tex.SymbolMap.AbstractSymbolMap,e.RegExpMap=MathJax._.input.tex.SymbolMap.RegExpMap,e.AbstractParseMap=MathJax._.input.tex.SymbolMap.AbstractParseMap,e.CharacterMap=MathJax._.input.tex.SymbolMap.CharacterMap,e.DelimiterMap=MathJax._.input.tex.SymbolMap.DelimiterMap,e.MacroMap=MathJax._.input.tex.SymbolMap.MacroMap,e.CommandMap=MathJax._.input.tex.SymbolMap.CommandMap,e.EnvironmentMap=MathJax._.input.tex.SymbolMap.EnvironmentMap},96:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.RequireLoad=MathJax._.input.tex.require.RequireConfiguration.RequireLoad,e.RequireMethods=MathJax._.input.tex.require.RequireConfiguration.RequireMethods,e.options=MathJax._.input.tex.require.RequireConfiguration.options,e.RequireConfiguration=MathJax._.input.tex.require.RequireConfiguration.RequireConfiguration},629:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.PackageError=MathJax._.components.package.PackageError,e.Package=MathJax._.components.package.Package}},o={};function r(t){var e=o[t];if(void 0!==e)return e.exports;e=o[t]={exports:{}};return a[t].call(e.exports,e,e.exports,r),e.exports}t=r(955),e=r(275),(0,t.r8)({_:{input:{tex:{autoload:{AutoloadConfiguration:e}}}}})}();