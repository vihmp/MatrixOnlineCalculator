@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using MatrixCalculators.DeterminantCalculators
@using MatrixCalculators.Utils.RowOperations
@using MatrixOnlineCalculator.Models.Options

@model DcGaussianEliminationSolution

@inject IOptions<MathFormatOptions> MathFormatOptions
@inject IViewLocalizer Localizer

<ol>
    @await Html.PartialAsync("_GaussianElimination", Model.SolutionSteps)
    @{
        int rowSwitchingNumber = Model.SolutionSteps.RowOperations
            .OfType<RowSwitching>()
            .Count();

        <li>
            <p>
                @Localizer["Количество перестановок строк в матрице: {0}.", rowSwitchingNumber]

                @if ((rowSwitchingNumber % 2) == 0)
                {
                    @Localizer["Знак определителя не изменился."]
                }
                else
                {
                    @Localizer["Знак определителя изменился на противоположный."]
                }
            </p>
        </li>
        <li>
            <p>@Localizer["Вычислим значение определителя:"]</p>
            <p>
                <math>
                    <mrow>
                        <mo>|</mo>
                        <math-matrix data="Model.SolutionSteps.Initial" />
                        <mo>|</mo>
                    </mrow>
                    <mo>=</mo>
                    <mrow>
                        @if ((rowSwitchingNumber % 2) != 0)
                        {
                            <mo>-</mo>
                        }
                        <mo>|</mo>
                        <math-matrix data="Model.SolutionSteps.Result"
                                     precision="MathFormatOptions.Value.DecimalPrecision" />
                        <mo>|</mo>
                    </mrow>
                    <mo>=</mo>
                    @if ((rowSwitchingNumber % 2) != 0)
                    {
                        <math-number value="-1"
                                     use-brackets="true" />
                        <mo>&sdot;</mo>
                    }
                    @for (int i = 0; i < Model.SolutionSteps.Initial.RowCount; i++)
                    {
                        if (i > 0)
                        {
                            <mo>&sdot;</mo>
                        }
                        <math-number value="Model.SolutionSteps.Result[i, i]"
                                     precision="MathFormatOptions.Value.DecimalPrecision"
                                     use-brackets="true" />
                    }
                    <mo>=</mo>
                    <math-number value="Model.Determinant"
                                 precision="MathFormatOptions.Value.DecimalPrecision" />
                </math>
            </p>
        </li>
    }
</ol>